-------------------AST----------------------
ast.BlockStmt{
  Body: []ast.Stmt{
    ast.VarDeclarationStmt{
      Identifier: "f",
      AssignedValue: ast.NumberExpr{
        Value: 1,
      },
    },
    ast.VarDeclarationStmt{
      Identifier: "b",
      AssignedValue: ast.StringExpr{
        Value: "n",
      },
    },
    ast.WhileStmt{
      Condition: ast.BinaryExpr{
        Left: ast.SymbolExpr{
          Value: "f",
        },
        Operator: lexer.Token{
          Kind: 14,
          Value: "==",
        },
        Right: ast.NumberExpr{
          Value: 1,
        },
      },
      Body: ast.BlockStmt{
        Body: []ast.Stmt{
          ast.PrintStmt{
            Argument: ast.SymbolExpr{
              Value: "f",
            },
          },
          ast.PrintStmt{
            Argument: ast.SymbolExpr{
              Value: "b",
            },
          },
        },
      },
    },
    ast.PrintStmt{
      Argument: ast.SymbolExpr{
        Value: "b",
      },
    },
    ast.InterruptionStmt{
      IrqNumber: 1,
      Body: ast.BlockStmt{
        Body: []ast.Stmt{
          ast.ExpressionStmt{
            Expression: ast.AssignmentExpr{
              Assigne: ast.SymbolExpr{
                Value: "b",
              },
              AssignedValue: ast.ReadChExpr{},
            },
          },
          ast.ExpressionStmt{
            Expression: ast.AssignmentExpr{
              Assigne: ast.SymbolExpr{
                Value: "f",
              },
              AssignedValue: ast.NumberExpr{
                Value: 0,
              },
            },
          },
        },
      },
    },
  },
}
push word 0x0B802000
[0x0015] - 51C13A00 - Opc: CMP, Mode: RegReg, D:, S1:RC, S2:zero ->[00000017] PATCHED to: 0x00000020
WHILE STMT BODY: ->[0000000A] PATCHED to: 0x00000022
[0x0027] - 424AA000 - Opc: ADD, Mode: MathRIR, D:ROutAddr, S1:ROutAddr, S2: ->[0000002B] PATCHED to: 0x00000034
-------------------debugAssembly----------------------
WHILE STATEMENT CONDITION:
[0x0002] - 04C20000 - Opc: MOV, Mode: MvMemReg, D:RM1, S1:, S2:
[0x0003] - 00000000 - Imm
[0x0004] - 0B802000 - Opc: PUSH, Mode: SingleReg, D:, S1:RM1, S2:
[0x0005] - 04240000 - Opc: MOV, Mode: MvImmReg, D:RM2, S1:, S2:
[0x0006] - 00000001 - Imm
[0x0007] - 0F820000 - Opc: POP, Mode: SingleReg, D:RM1, S1:, S2:
[0x0008] - 51C02400 - Opc: CMP, Mode: RegReg, D:, S1:RM1, S2:RM2
[0x0009] - C7000000 - Opc: JNE, Mode: JAbsAddr, D:, S1:, S2:
[0x000A] - 03E00000 - Opc: NOP, Mode: NoOperands, D:, S1:, S2:
WHILE STMT BODY:
PRINT STMT
[0x000B] - 04CC0000 - Opc: MOV, Mode: MvMemReg, D:ROutData, S1:, S2:
[0x000C] - 00000000 - Imm
[0x000D] - 6AA00000 - Opc: OUT, Mode: Word, D:RA, S1:, S2:
PRINT STMT
[0x000E] - 04CA0000 - Opc: MOV, Mode: MvMemReg, D:ROutAddr, S1:, S2:
[0x000F] - 00000008 - Imm
[0x0010] - 0472A000 - Opc: MOV, Mode: MvRegIndReg, D:RC, S1:ROutAddr, S2:
[0x0011] - 8D732000 - Opc: AND, Mode: ImmReg, D:RC, S1:RC, S2:
[0x0012] - 000000FF - Imm
[0x0013] - 424AA000 - Opc: ADD, Mode: MathRIR, D:ROutAddr, S1:ROutAddr, S2:
[0x0014] - 00000001 - Imm
[0x0015] - 51C13A00 - Opc: CMP, Mode: RegReg, D:, S1:RC, S2:zero
[0x0016] - C3000000 - Opc: JE, Mode: JAbsAddr, D:, S1:, S2:
[0x0017] - 03E00000 - Opc: NOP, Mode: NoOperands, D:, S1:, S2:
[0x0018] - 05ECA000 - Opc: MOV, Mode: MvLowRegIndReg, D:ROutData, S1:ROutAddr, S2:
[0x0019] - 6A820000 - Opc: OUT, Mode: Byte, D:RM1, S1:, S2:
[0x001A] - 46532000 - Opc: SUB, Mode: MathRIR, D:RC, S1:RC, S2:
[0x001B] - 00000001 - Imm
[0x001C] - 424AA000 - Opc: ADD, Mode: MathRIR, D:ROutAddr, S1:ROutAddr, S2:
[0x001D] - 00000001 - Imm
[0x001E] - 83000000 - Opc: JMP, Mode: JAbsAddr, D:, S1:, S2:
[0x001F] - 00000015 - Imm
[0x0020] - 83000000 - Opc: JMP, Mode: JAbsAddr, D:, S1:, S2:
[0x0021] - 00000002 - Imm
END OF WHILE STMT
PRINT STMT
[0x0022] - 04CA0000 - Opc: MOV, Mode: MvMemReg, D:ROutAddr, S1:, S2:
[0x0023] - 00000008 - Imm
[0x0024] - 0472A000 - Opc: MOV, Mode: MvRegIndReg, D:RC, S1:ROutAddr, S2:
[0x0025] - 8D732000 - Opc: AND, Mode: ImmReg, D:RC, S1:RC, S2:
[0x0026] - 000000FF - Imm
[0x0027] - 424AA000 - Opc: ADD, Mode: MathRIR, D:ROutAddr, S1:ROutAddr, S2:
[0x0028] - 00000001 - Imm
[0x0029] - 51C13A00 - Opc: CMP, Mode: RegReg, D:, S1:RC, S2:zero
[0x002A] - C3000000 - Opc: JE, Mode: JAbsAddr, D:, S1:, S2:
[0x002B] - 03E00000 - Opc: NOP, Mode: NoOperands, D:, S1:, S2:
[0x002C] - 05ECA000 - Opc: MOV, Mode: MvLowRegIndReg, D:ROutData, S1:ROutAddr, S2:
[0x002D] - 6A820000 - Opc: OUT, Mode: Byte, D:RM1, S1:, S2:
[0x002E] - 46532000 - Opc: SUB, Mode: MathRIR, D:RC, S1:RC, S2:
[0x002F] - 00000001 - Imm
[0x0030] - 424AA000 - Opc: ADD, Mode: MathRIR, D:ROutAddr, S1:ROutAddr, S2:
[0x0031] - 00000001 - Imm
[0x0032] - 83000000 - Opc: JMP, Mode: JAbsAddr, D:, S1:, S2:
[0x0033] - 00000029 - Imm
[0x0034] - 1BE00000 - Opc: HALT, Mode: NoOperands, D:, S1:, S2:
INTERRUPTION 1 STMT
READ_CHAR EXPR
[0x0035] - 62820000 - Opc: IN, Mode: Byte, D:RM1, S1:, S2:
[0x0036] - 04010000 - Opc: MOV, Mode: MvRegReg, D:RA, S1:RInData, S2:
[0x0037] - 04E00000 - Opc: MOV, Mode: MvRegMem, D:, S1:RA, S2:
[0x0038] - 00000008 - Imm
[0x0039] - 04200000 - Opc: MOV, Mode: MvImmReg, D:RA, S1:, S2:
[0x003A] - 00000000 - Imm
[0x003B] - 04E00000 - Opc: MOV, Mode: MvRegMem, D:, S1:RA, S2:
[0x003C] - 00000000 - Imm
[0x003D] - 93E20000 - Opc: IRet, Mode: NoOperands, D:RM1, S1:, S2:
-------------------instructionMemory----------------------
[0x0000|0000]: 0x00000000 - 0
[0x0001|0001]: 0x00000035 - 53
[0x0002|0002]: 0x04C20000 - 79822848
[0x0003|0003]: 0x00000000 - 0
[0x0004|0004]: 0x0B802000 - 192946176
[0x0005|0005]: 0x04240000 - 69468160
[0x0006|0006]: 0x00000001 - 1
[0x0007|0007]: 0x0F820000 - 260177920
[0x0008|0008]: 0x51C02400 - 1371546624
[0x0009|0009]: 0xC7000000 - 3338665984
[0x000A|0010]: 0x00000022 - 34
[0x000B|0011]: 0x04CC0000 - 80478208
[0x000C|0012]: 0x00000000 - 0
[0x000D|0013]: 0x6AA00000 - 1788870656
[0x000E|0014]: 0x04CA0000 - 80347136
[0x000F|0015]: 0x00000008 - 8
[0x0010|0016]: 0x0472A000 - 74620928
[0x0011|0017]: 0x8D732000 - 2373132288
[0x0012|0018]: 0x000000FF - 255
[0x0013|0019]: 0x424AA000 - 1112186880
[0x0014|0020]: 0x00000001 - 1
[0x0015|0021]: 0x51C13A00 - 1371617792
[0x0016|0022]: 0xC3000000 - 3271557120
[0x0017|0023]: 0x00000020 - 32
[0x0018|0024]: 0x05ECA000 - 99393536
[0x0019|0025]: 0x6A820000 - 1786904576
[0x001A|0026]: 0x46532000 - 1179852800
[0x001B|0027]: 0x00000001 - 1
[0x001C|0028]: 0x424AA000 - 1112186880
[0x001D|0029]: 0x00000001 - 1
[0x001E|0030]: 0x83000000 - 2197815296
[0x001F|0031]: 0x00000015 - 21
[0x0020|0032]: 0x83000000 - 2197815296
[0x0021|0033]: 0x00000002 - 2
[0x0022|0034]: 0x04CA0000 - 80347136
[0x0023|0035]: 0x00000008 - 8
[0x0024|0036]: 0x0472A000 - 74620928
[0x0025|0037]: 0x8D732000 - 2373132288
[0x0026|0038]: 0x000000FF - 255
[0x0027|0039]: 0x424AA000 - 1112186880
[0x0028|0040]: 0x00000001 - 1
[0x0029|0041]: 0x51C13A00 - 1371617792
[0x002A|0042]: 0xC3000000 - 3271557120
[0x002B|0043]: 0x00000034 - 52
[0x002C|0044]: 0x05ECA000 - 99393536
[0x002D|0045]: 0x6A820000 - 1786904576
[0x002E|0046]: 0x46532000 - 1179852800
[0x002F|0047]: 0x00000001 - 1
[0x0030|0048]: 0x424AA000 - 1112186880
[0x0031|0049]: 0x00000001 - 1
[0x0032|0050]: 0x83000000 - 2197815296
[0x0033|0051]: 0x00000029 - 41
[0x0034|0052]: 0x1BE00000 - 467664896
[0x0035|0053]: 0x62820000 - 1652686848
[0x0036|0054]: 0x04010000 - 67174400
[0x0037|0055]: 0x04E00000 - 81788928
[0x0038|0056]: 0x00000008 - 8
[0x0039|0057]: 0x04200000 - 69206016
[0x003A|0058]: 0x00000000 - 0
[0x003B|0059]: 0x04E00000 - 81788928
[0x003C|0060]: 0x00000000 - 0
[0x003D|0061]: 0x93E20000 - 2481061888
-------------------dataMemory----------------------
_____
[0x0|0]: 0x01
[0x1|1]: 0x00
[0x2|2]: 0x00
[0x3|3]: 0x00
_____
[0x4|4]: 0x01
[0x5|5]: 0x6E
[0x6|6]: 0x00
[0x7|7]: 0x00
_____
[0x8|8]: 0x04
[0x9|9]: 0x00
[0xA|10]: 0x00
[0xB|11]: 0x00
-------------------SymTable--------------------------
[var_name | addres]
f |  0
b |  8
