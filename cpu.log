[]io.TickEntry{
  io.TickEntry{
    Tick: 30,
    Input: io.Input{
      IrqNumber: 1,
      Value: "A",
    },
  },
  io.TickEntry{
    Tick: 60,
    Input: io.Input{
      IrqNumber: 1,
      Value: "B",
    },
  },
}
--------------------------------------------------------------
TICK    0 @ 0x04C20000 -  MOV MvMemReg; PC++ | PC=   3/0x3
TICK    1 - RAddr<-memI[3]; PC++ | PC=   4/0x4 RAddr=0x0
TICK    2 - RM1<-memD[0] | RM1=   1/0x1
TICK    3 - RM1<-memD[1] | RM1=   1/0x1
TICK    4 - RM1<-memD[2] | RM1=   1/0x1
TICK    5 - RM1<-memD[3] | RM1=   1/0x1
TICK    6 @ 0x0B802000 -  PUSH SingleReg; PC++ | PC=   5/0x5
TICK    7 - SP=SP-4 
TICK    8 - memD[0xFC]<-RM1 | memD[0xFC]=0x1
TICK    9 - memD[0xFD]<-RM1 | memD[0xFD]=0x0
TICK   10 - memD[0xFE]<-RM1 | memD[0xFE]=0x0
TICK   11 - memD[0xFF]<-RM1 | memD[0xFF]=0x0
TICK   12 @ 0x04240000 -  MOV MvImmReg; PC++ | PC=   6/0x6
TICK   13 - RM2<-#   1; PC++ | SP= 252/0xFC
TICK   14 @ 0x0F820000 -  POP SingleReg; PC++ | PC=   8/0x8
TICK   15 - RAddr<-SP | RAddr= 252/0xFC
TICK   16 - RM1<-memD[FC] | RM1=   1/0x1
TICK   17 - RM1<-memD[FD] | RM1=   1/0x1
TICK   18 - RM1<-memD[FE] | RM1=   1/0x1
TICK   19 - RM1<-memD[FF] | RM1=   1/0x1
TICK   20 - SP=SP+4 
TICK   21 @ 0x51C02400 -  CMP RegReg; PC++ | PC=   9/0x9
TICK   22 - CMP RM1, RM2 | N=0,Z=1,V=0,C=0; RM1=   1/0x1 RM2=   1/0x1
TICK   23 @ 0xC7000000 -  JNE JAbsAddr; PC++ | PC=  10/0xA
TICK   24 - RAddr<-memI[0xA]; PC++ | RAddr=  34/0x22
TICK   25 - JNE not taken | PC=  11/0xB; N=0,Z=1,V=0,C=0
TICK   26 @ 0x04CC0000 -  MOV MvMemReg; PC++ | PC=  12/0xC
TICK   27 - RAddr<-memI[12]; PC++ | PC=  13/0xD RAddr=0x0
TICK   28 - ROutData<-memD[0] | ROutData=   1/0x1
TICK   29 - ROutData<-memD[1] | ROutData=   1/0x1
TICK   30 - ROutData<-memD[2] | ROutData=   1/0x1
TICK   31 - ROutData<-memD[3] | ROutData=   1/0x1
------------Entering Interruption 1------------
TICK   32 @ 0x62820000 -  IN Byte; PC++ | PC=  54/0x36
TICK   33 - RInData <- port port Char | RInData=  65/0x41
TICK   34 @ 0x04010000 -  MOV MvRegReg; PC++ | PC=  55/0x37
TICK   35 - RA<-RA; PC++
TICK   36 @ 0x04E00000 -  MOV MvRegMem; PC++ | PC=  56/0x38
TICK   37 - RAddr<-memI[0x38]; PC++ 
TICK   38 - memD[0x8]<-RA | memD[0x8]=0x41
TICK   39 - memD[0x9]<-RA | memD[0x9]=0x0
TICK   40 - memD[0xA]<-RA | memD[0xA]=0x0
TICK   41 - memD[0xB]<-RA | memD[0xB]=0x0
TICK   42 @ 0x04200000 -  MOV MvImmReg; PC++ | PC=  58/0x3A
TICK   43 - RA<-#   0; PC++ | SP= 256/0x100
TICK   44 @ 0x04E00000 -  MOV MvRegMem; PC++ | PC=  60/0x3C
TICK   45 - RAddr<-memI[0x3C]; PC++ 
TICK   46 - memD[0x0]<-RA | memD[0x0]=0x0
TICK   47 - memD[0x1]<-RA | memD[0x1]=0x0
TICK   48 - memD[0x2]<-RA | memD[0x2]=0x0
TICK   49 - memD[0x3]<-RA | memD[0x3]=0x0
TICK   50 @ 0x93E20000 -  IRet NoOperands; PC++ | PC=  62/0x3E
TICK   51 - restore register values | PC=  13/0xD
------------Exiting interruption------------
TICK   52 @ 0x6AA00000 -  OUT Word; PC++ | PC=  14/0xE
TICK   53 - port 0 <- ROutData  | [49]
TICK   54 @ 0x04CA0000 -  MOV MvMemReg; PC++ | PC=  15/0xF
TICK   55 - RAddr<-memI[15]; PC++ | PC=  16/0x10 RAddr=0x8
TICK   56 - ROutAddr<-memD[8] | ROutAddr=  65/0x41
TICK   57 - ROutAddr<-memD[9] | ROutAddr=  65/0x41
TICK   58 - ROutAddr<-memD[A] | ROutAddr=  65/0x41
TICK   59 - ROutAddr<-memD[B] | ROutAddr=  65/0x41
------------Entering Interruption 1------------
TICK   60 @ 0x62820000 -  IN Byte; PC++ | PC=  54/0x36
TICK   61 - RInData <- port port Char | RInData=  66/0x42
TICK   62 @ 0x04010000 -  MOV MvRegReg; PC++ | PC=  55/0x37
TICK   63 - RA<-RA; PC++
TICK   64 @ 0x04E00000 -  MOV MvRegMem; PC++ | PC=  56/0x38
TICK   65 - RAddr<-memI[0x38]; PC++ 
TICK   66 - memD[0x8]<-RA | memD[0x8]=0x42
TICK   67 - memD[0x9]<-RA | memD[0x9]=0x0
TICK   68 - memD[0xA]<-RA | memD[0xA]=0x0
TICK   69 - memD[0xB]<-RA | memD[0xB]=0x0
TICK   70 @ 0x04200000 -  MOV MvImmReg; PC++ | PC=  58/0x3A
TICK   71 - RA<-#   0; PC++ | SP= 256/0x100
TICK   72 @ 0x04E00000 -  MOV MvRegMem; PC++ | PC=  60/0x3C
TICK   73 - RAddr<-memI[0x3C]; PC++ 
TICK   74 - memD[0x0]<-RA | memD[0x0]=0x0
TICK   75 - memD[0x1]<-RA | memD[0x1]=0x0
TICK   76 - memD[0x2]<-RA | memD[0x2]=0x0
TICK   77 - memD[0x3]<-RA | memD[0x3]=0x0
TICK   78 @ 0x93E20000 -  IRet NoOperands; PC++ | PC=  62/0x3E
TICK   79 - restore register values | PC=  16/0x10
------------Exiting interruption------------
TICK   80 @ 0x0472A000 -  MOV MvRegIndReg; PC++ | PC=  17/0x11
TICK   81 - RC<-*ROutAddr | RC=   0/0x0
TICK   82 - RC<-memD[41] | RC=   0/0x0
TICK   83 - RC<-memD[42] | RC=   0/0x0
TICK   84 - RC<-memD[43] | RC=   0/0x0
TICK   85 - RC<-memD[44] | RC=   0/0x0
TICK   86 - RC=   0/0x0
TICK   87 @ 0x8D732000 -  AND ImmReg; PC++ | PC=  18/0x12
TICK   88 - RT<-memI[0x12]; PC++ | RT= 255/0xFF
TICK   89 - RC<-RC & FF | RC=   0/0x0
TICK   90 @ 0x424AA000 -  ADD MathRIR; PC++ | PC=  20/0x14
TICK   91 - RT<-memI[0x14]; PC++ | RT=   1/0x1
TICK   92 - ROutAddr<-(ROutAddr+RT) | ROutAddr=  66/0x42 N=0,Z=0,V=0,C=0
TICK   93 @ 0x51C13A00 -  CMP RegReg; PC++ | PC=  22/0x16
TICK   94 - CMP RC, zero | N=0,Z=1,V=0,C=0; RC=   0/0x0 zero=   0/0x0
TICK   95 @ 0xC3000000 -  JE JAbsAddr; PC++ | PC=  23/0x17
TICK   96 - RAddr<-memI[0x17]; PC++ | RAddr=  32/0x20
TICK   97 - PC<-RAddr | PC=PC=  32/0x20
TICK   98 @ 0x83000000 -  JMP JAbsAddr; PC++ | PC=  33/0x21
TICK   99 - RT<-memI[0x21]| RT=   2/0x2
TICK  100 - PC<-RT | PC=   2/0x2
TICK  101 @ 0x04C20000 -  MOV MvMemReg; PC++ | PC=   3/0x3
TICK  102 - RAddr<-memI[3]; PC++ | PC=   4/0x4 RAddr=0x0
TICK  103 - RM1<-memD[0] | RM1=   0/0x0
TICK  104 - RM1<-memD[1] | RM1=   0/0x0
TICK  105 - RM1<-memD[2] | RM1=   0/0x0
TICK  106 - RM1<-memD[3] | RM1=   0/0x0
TICK  107 @ 0x0B802000 -  PUSH SingleReg; PC++ | PC=   5/0x5
TICK  108 - SP=SP-4 
TICK  109 - memD[0xFC]<-RM1 | memD[0xFC]=0x0
TICK  110 - memD[0xFD]<-RM1 | memD[0xFD]=0x0
TICK  111 - memD[0xFE]<-RM1 | memD[0xFE]=0x0
TICK  112 - memD[0xFF]<-RM1 | memD[0xFF]=0x0
TICK  113 @ 0x04240000 -  MOV MvImmReg; PC++ | PC=   6/0x6
TICK  114 - RM2<-#   1; PC++ | SP= 252/0xFC
TICK  115 @ 0x0F820000 -  POP SingleReg; PC++ | PC=   8/0x8
TICK  116 - RAddr<-SP | RAddr= 252/0xFC
TICK  117 - RM1<-memD[FC] | RM1=   0/0x0
TICK  118 - RM1<-memD[FD] | RM1=   0/0x0
TICK  119 - RM1<-memD[FE] | RM1=   0/0x0
TICK  120 - RM1<-memD[FF] | RM1=   0/0x0
TICK  121 - SP=SP+4 
TICK  122 @ 0x51C02400 -  CMP RegReg; PC++ | PC=   9/0x9
TICK  123 - CMP RM1, RM2 | N=1,Z=0,V=0,C=1; RM1=   0/0x0 RM2=   1/0x1
TICK  124 @ 0xC7000000 -  JNE JAbsAddr; PC++ | PC=  10/0xA
TICK  125 - RAddr<-memI[0xA]; PC++ | RAddr=  34/0x22
TICK  126 - JNE taken; PC<-RAddr | PC=PC=  34/0x22
TICK  127 @ 0x04CA0000 -  MOV MvMemReg; PC++ | PC=  35/0x23
TICK  128 - RAddr<-memI[35]; PC++ | PC=  36/0x24 RAddr=0x8
TICK  129 - ROutAddr<-memD[8] | ROutAddr=  66/0x42
TICK  130 - ROutAddr<-memD[9] | ROutAddr=  66/0x42
TICK  131 - ROutAddr<-memD[A] | ROutAddr=  66/0x42
TICK  132 - ROutAddr<-memD[B] | ROutAddr=  66/0x42
TICK  133 @ 0x0472A000 -  MOV MvRegIndReg; PC++ | PC=  37/0x25
TICK  134 - RC<-*ROutAddr | RC=   0/0x0
TICK  135 - RC<-memD[42] | RC=   0/0x0
TICK  136 - RC<-memD[43] | RC=   0/0x0
TICK  137 - RC<-memD[44] | RC=   0/0x0
TICK  138 - RC<-memD[45] | RC=   0/0x0
TICK  139 - RC=   0/0x0
TICK  140 @ 0x8D732000 -  AND ImmReg; PC++ | PC=  38/0x26
TICK  141 - RT<-memI[0x26]; PC++ | RT= 255/0xFF
TICK  142 - RC<-RC & FF | RC=   0/0x0
TICK  143 @ 0x424AA000 -  ADD MathRIR; PC++ | PC=  40/0x28
TICK  144 - RT<-memI[0x28]; PC++ | RT=   1/0x1
TICK  145 - ROutAddr<-(ROutAddr+RT) | ROutAddr=  67/0x43 N=0,Z=0,V=0,C=0
TICK  146 @ 0x51C13A00 -  CMP RegReg; PC++ | PC=  42/0x2A
TICK  147 - CMP RC, zero | N=0,Z=1,V=0,C=0; RC=   0/0x0 zero=   0/0x0
TICK  148 @ 0xC3000000 -  JE JAbsAddr; PC++ | PC=  43/0x2B
TICK  149 - RAddr<-memI[0x2B]; PC++ | RAddr=  52/0x34
TICK  150 - PC<-RAddr | PC=PC=  52/0x34
TICK  151 @ 0x1BE00000 -  HALT NoOperands; PC++ | PC=  53/0x35
TICK  152 - simultaion stopped
───── Port Outputs ─────
port  0| 1
       |31
       |49
